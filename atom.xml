<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JOEL-T99</title>
  
  
  <link href="http://yoursite.com/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-11-16T12:01:15.829Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>JOEL-T99</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo &amp; Typora 写出彩色字体</title>
    <link href="http://yoursite.com/2020/11/13/Hexo-Typora-%E5%86%99%E5%87%BA%E5%BD%A9%E8%89%B2%E5%AD%97%E4%BD%93/"/>
    <id>http://yoursite.com/2020/11/13/Hexo-Typora-%E5%86%99%E5%87%BA%E5%BD%A9%E8%89%B2%E5%AD%97%E4%BD%93/</id>
    <published>2020-11-13T09:50:24.000Z</published>
    <updated>2020-11-16T12:01:15.829Z</updated>
    
    <content type="html"><![CDATA[<p><span style ="color:#5F9EA0;font-size:30px;">使用方法： </span> </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&#x27;color:文字颜色;background:背景颜色;font-size:文字大小;font-family:字体;&#x27;</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p><span style ="color:#5F9EA0;font-size:30px;">示例如下： </span> </p><p>1.更改文字颜色</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span> =<span class="string">&#x27;color:#FF7F50;’&gt;你看我是什么色？&lt;/span&gt; </span></span></span><br></pre></td></tr></table></figure><pre><code> &lt;span style =&#39;color:#FF7F50;&#39;&gt;你看我是什么色？&lt;/span&gt; </code></pre><p>2.更改文字背景颜色</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&#x27;background:#FF7F50;&#x27;</span>&gt;</span>你看我的背景是什么色？<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​    <span style='background:#FF7F50;'>你看我的背景是什么色？</span></p><p>3.更改文字大小</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&#x27;font-size:20px;&#x27;</span>&gt;</span>我是不是比其它字大呢？<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p><span style='font-size:20px;'>我是不是比其它字大呢？</span></p><p>4.更改文字字体</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&#x27;font-family:Microsoft YaHei;&#x27;</span>&gt;</span>你看我的字体是微软雅黑吗？<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​    <span style='font-family:Microsoft YaHei;'>你看我的字体是微软雅黑吗？</span></p><p><span style ="color:#5F9EA0;font-size:30px;">色彩列表如下： </span> </p><table><tbody>       <tr>             <th><b>方法说明<b></th><th><b>颜色名称<b></th><th><b>颜色<b></th>       </tr>       <tr>             <td><font color="AntiqueWhite">AntiqueWhite</font></td>    <td><font color="AntiqueWhite">#FAEBD7</font></td>    <td bgcolor="AntiqueWhite">rgb(250, 235, 215)</td>       </tr>     <tr>             <td><font color="AliceBlue">AliceBlue</font></td>    <td><font color="AliceBlue">#F0F8FF</font></td>    <td bgcolor="AliceBlue">rgb(240, 248, 255)</td>       </tr>     <tr>             <td><font color="Aqua">Aqua</font></td>    <td><font color="Aqua">#00FFFF</font></td>    <td bgcolor="Aqua">rgb(0, 255, 255)</td>       </tr>     <tr>             <td><font color="Aquamarine">Aquamarine</font></td>    <td><font color="Aquamarine">#7FFFD4</font></td>    <td bgcolor="Aquamarine">#7FFFD4</td>       </tr>     <tr>             <td><font color="Azure">Azure</font></td>    <td><font color="Azure">#F0FFFF</font></td>    <td bgcolor="Azure">rgb(240, 255, 255)</td>       </tr>         <tr>             <td><font color="Beige">Beige</font></td>    <td><font color="Beige">#F5F5DC</font></td>    <td bgcolor="Beige">rgb(245, 245, 220)</td>       </tr>         <tr>             <td><font color="Bisque">Bisque</font></td>    <td><font color="Bisque">#FFE4C4</font></td>    <td bgcolor="Bisque">rgb(255, 228, 196)</td>       </tr>         <tr>             <td><font color="BlanchedAlmond">BlanchedAlmond</font></td>    <td><font color="BlanchedAlmond">#FFEBCD</font></td>    <td bgcolor="BlanchedAlmond">rgb(255, 235, 205)</td>       </tr>         <tr>             <td><font color="BlueViolet">BlueViolet</font></td>    <td><font color="BlueViolet">#8A2BE2</font></td>    <td bgcolor="BlueViolet">rgb(138, 43, 226)</td>       </tr>         <tr>             <td><font color="BurlyWood">BurlyWood</font></td>    <td><font color="BurlyWood">#DEB887</font></td>    <td bgcolor="BurlyWood">rgb(222, 184, 135)</td>       </tr>         <tr>             <td><font color="CadetBlue">CadetBlue</font></td>    <td><font color="CadetBlue">#5F9EA0</font></td>    <td bgcolor="CadetBlue">rgb(95, 158, 160)</td>       </tr>       <tr>             <td><font color="Chartreuse">Chartreuse</font></td>    <td><font color="Chartreuse">#7FFF00</font></td>    <td bgcolor="Chartreuse">rgb(127, 255, 0)</td>       </tr>     </tr>       <tr>             <td><font color="Chocolate">Chocolate</font></td>    <td><font color="Chocolate">#D2691E</font></td>    <td bgcolor="Chocolate">rgb(210, 105, 30)</td>       </tr>   <tr>             <td><font color="Coral">Coral</font></td>    <td><font color="Coral">#FF7F50</font></td>    <td bgcolor="Coral">rgb(255, 127, 80)</td>       </tr>  <tr>             <td><font color="CornflowerBlue">CornflowerBlue</font></td>    <td><font color="CornflowerBlue">#6495ED</font></td>    <td bgcolor="CornflowerBlue">rgb(100, 149, 237)</td>       </tr>  <tr>             <td><font color="Cornsilk">Cornsilk</font></td>    <td><font color="Cornsilk">#FFF8DC</font></td>    <td bgcolor="Cornsilk">rgb(255, 248, 220)</td>       </tr>        <tr>             <td><font color="DarkCyan">DarkCyan</font></td>    <td><font color="DarkCyan">#008B8B</font></td>    <td bgcolor="DarkCyan">rgb(0, 139, 139)</td>       </tr>        <tr>             <td><font color="DarkGray">DarkGray</font></td>    <td><font color="DarkGray">#A9A9A9</font></td>    <td bgcolor="DarkGray">rgb(169, 169, 169)</td>       </tr>        <tr>             <td><font color="Darkorange">Darkorange</font></td>    <td><font color="Darkorange">#FF8C00</font></td>    <td bgcolor="Darkorange">rgb(255, 140, 0)</td>       </tr>        <tr>             <td><font color="DarkSalmon">DarkSalmon</font></td>    <td><font color="DarkSalmon">#E9967A</font></td>    <td bgcolor="DarkSalmon">rgb(233, 150, 122)</td>       </tr>        <tr>             <td><font color="DarkSeaGreen">DarkSeaGreen</font></td>    <td><font color="DarkSeaGreen">#8FBC8F</font></td>    <td bgcolor="DarkSeaGreen">rgb(143, 188, 143)</td>       </tr>        <tr>             <td><font color="Gainsboro">Gainsboro</font></td>    <td><font color="Gainsboro">#DCDCDC</font></td>    <td bgcolor="Gainsboro">rgb(220, 220, 220)</td>       </tr>        <tr>             <td><font color="GhostWhite">GhostWhite</font></td>    <td><font color="GhostWhite">#F8F8FF</font></td>    <td bgcolor="GhostWhite">rgb(248, 248, 255)</td>       </tr>        <tr>             <td><font color="Gold">Gold</font></td>    <td><font color="Gold">#FFD700</font></td>    <td bgcolor="Gold">rgb(255, 215, 0)</td>       </tr>        <tr>             <td><font color="GoldenRod">GoldenRod</font></td>    <td><font color="GoldenRod">#DAA520</font></td>    <td bgcolor="GoldenRod">rgb(218, 165, 32)</td>       </tr>        <tr>             <td><font color="Gray">Gray</font></td>    <td><font color="Gray">#808080</font></td>    <td bgcolor="Gray">rgb(128, 128, 128)</td>       </tr>        <tr>             <td><font color="Green">Green</font></td>    <td><font color="Green">#008000</font></td>    <td bgcolor="Green">rgb(0, 128, 0)</td>       </tr>        <tr>             <td><font color="GreenYellow">GreenYellow</font></td>    <td><font color="GreenYellow">#ADFF2F</font></td>    <td bgcolor="GreenYellow">rgb(173, 255, 47)</td>       </tr>        <tr>             <td><font color="HotPink">HotPink</font></td>    <td><font color="HotPink">#FF69B4</font></td>    <td bgcolor="HotPink">rgb(255, 105, 180)</td>       </tr>        <tr>             <td><font color="IndianRed">IndianRed</font></td>    <td><font color="IndianRed">#CD5C5C</font></td>    <td bgcolor="IndianRed">rgb(205, 92, 92)</td>       </tr>        <tr>             <td><font color="Khaki">Khaki</font></td>    <td><font color="Khaki">#F0E68C</font></td>    <td bgcolor="Khaki">rgb(240, 230, 140)</td>       </tr>        <tr>             <td><font color="Lavender">Lavender</font></td>    <td><font color="Lavender">#E6E6FA</font></td>    <td bgcolor="Lavender">rgb(230, 230, 250)</td>       </tr>        <tr>             <td><font color="LavenderBlush">LavenderBlush</font></td>    <td><font color="LavenderBlush">#FFF0F5</font></td>    <td bgcolor="LavenderBlush">rgb(255, 240, 245)</td>       </tr>        <tr>             <td><font color="LightBlue">LightBlue</font></td>    <td><font color="LightBlue">#ADD8E6</font></td>    <td bgcolor="LightBlue">rgb(173, 216, 230)</td>       </tr>  <tr>             <td><font color="LightCoral">LightCoral</font></td>    <td><font color="LightCoral">#F08080</font></td>    <td bgcolor="LightCoral">rgb(240, 128, 128)</td>       </tr>  <tr>             <td><font color="LightCyan">LightCyan</font></td>    <td><font color="LightCyan">#E0FFFF</font></td>    <td bgcolor="LightCyan">rgb(224, 255, 255)</td>       </tr>   <tr>             <td><font color="LightGoldenRodYellow">LightGoldenRodYellow</font></td>    <td><font color="LightGoldenRodYellow">#FAFAD2</font></td>    <td bgcolor="LightGoldenRodYellow">rgb(250, 250, 210)</td>       </tr>         <tr>             <td><font color="LightGrey">LightGrey</font></td>    <td><font color="LightGrey">#D3D3D3</font></td>    <td bgcolor="LightGrey">rgb(211, 211, 211)</td>       </tr>         <tr>             <td><font color="LightSalmon">LightSalmon</font></td>    <td><font color="LightSalmon">#FFA07A</font></td>    <td bgcolor="LightSalmon">rgb(255, 160, 122)</td>       </tr>         <tr>             <td><font color="LightSeaGreen">LightSeaGreen</font></td>    <td><font color="LightSeaGreen">#20B2AA</font></td>    <td bgcolor="LightSeaGreen">rgb(32, 178, 170)</td>       </tr>         <tr>             <td><font color="LightSkyBlue">LightSkyBlue</font></td>    <td><font color="LightSkyBlue">#87CEFA</font></td>    <td bgcolor="LightSkyBlue">rgb(135, 206, 250)</td>       </tr>         <tr>             <td><font color="LightSlateBlue">LightSlateBlue</font></td>    <td><font color="LightSlateBlue">#8470FF</font></td>    <td bgcolor="LightSlateBlue">rgb(132, 112, 255)</td>       </tr>         <tr>             <td><font color="LightSlateGray">LightSlateGray</font></td>    <td><font color="LightSlateGray">#778899</font></td>    <td bgcolor="LightSlateGray">rgb(119, 136, 153)</td>       </tr>           <tr>             <td><font color="LightSteelBlue">LightSteelBlue</font></td>    <td><font color="LightSteelBlue">#B0C4DE</font></td>    <td bgcolor="LightSteelBlue">rgb(176, 196, 222)</td>       </tr>         <tr>             <td><font color="MediumAquaMarine">MediumAquaMarine</font></td>    <td><font color="MediumAquaMarine">#66CDAA</font></td>    <td bgcolor="MediumAquaMarine">rgb(102, 205, 170)</td>       </tr>         <tr>             <td><font color="MediumSlateBlue">MediumSlateBlue</font></td>    <td><font color="MediumSlateBlue">#7B68EE</font></td>    <td bgcolor="MediumSlateBlue">rgb(123, 104, 238)</td>       </tr>         <tr>             <td><font color="MediumSpringGreen">MediumSpringGreen</font></td>    <td><font color="MediumSpringGreen">#00FA9A</font></td>    <td bgcolor="MediumSpringGreen">rgb(0, 250, 154)</td>       </tr>         <tr>             <td><font color="MediumTurquoise">MediumTurquoise</font></td>    <td><font color="MediumTurquoise">#48D1CC</font></td>    <td bgcolor="MediumTurquoise">rgb(72, 209, 204)</td>       </tr>         <tr>             <td><font color="PaleTurquoise">PaleTurquoise</font></td>    <td><font color="PaleTurquoise">#AFEEEE</font></td>    <td bgcolor="PaleTurquoise">rgb(175, 238, 238)</td>       </tr>         <tr>             <td><font color="Tomato">Tomato</font></td>    <td><font color="Tomato">#FF6347</font></td>    <td bgcolor="Tomato">rgb(255, 99, 71)</td>       </tr>         <tr>             <td><font color="Turquoise">Turquoise</font></td>    <td><font color="Turquoise">#40E0D0</font></td>    <td bgcolor="Turquoise">rgb(64, 224, 208)</td>       </tr>         <tr>             <td><font color="Yellow">Yellow</font></td>    <td><font color="Yellow">#FFFF00</font></td>    <td bgcolor="Yellow">rgb(255, 255, 0)</td>       </tr>         <tr>             <td><font color="YellowGreen">YellowGreen</font></td>    <td><font color="YellowGreen">#9ACD32</font></td>    <td bgcolor="YellowGreen">rgb(154, 205, 50)</td>       </tr>   <tr>             <td><font color="White">White</font></td>    <td><font color="White">#FFFFFF</font></td>    <td bgcolor="White">rgb(255, 255, 255)</td>       </tr>         <tr>             <td><font color="WhiteSmoke">WhiteSmoke</font></td>    <td><font color="WhiteSmoke">#F5F5F5</font></td>    <td bgcolor="WhiteSmoke">rgb(245, 245, 245)</td>       </tr>       ]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;span style =&quot;color:#5F9EA0;font-size:30px;&quot;&gt;使用方法： &lt;/span&gt; &lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span c</summary>
      
    
    
    
    
    <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
    <category term="Typora" scheme="http://yoursite.com/tags/Typora/"/>
    
  </entry>
  
  <entry>
    <title>Linux（四）RPM &amp; YUM</title>
    <link href="http://yoursite.com/2020/11/13/Linux%EF%BC%88%E5%9B%9B%EF%BC%89RPM%20&amp;%20YUM/"/>
    <id>http://yoursite.com/2020/11/13/Linux%EF%BC%88%E5%9B%9B%EF%BC%89RPM%20&amp;%20YUM/</id>
    <published>2020-11-12T16:08:51.000Z</published>
    <updated>2020-11-16T12:00:44.924Z</updated>
    
    <content type="html"><![CDATA[<h1 id="RPM"><a href="#RPM" class="headerlink" title="RPM"></a>RPM</h1><p>RPM全 称 为 Redhat  Package Manager，最早由 Red Hat 公司制定实施，随后被 GNU 开源操作系统接受并成为很多 Linux 系统的既定软件标准。</p><p>&nbsp;</p><h2 id="rpm-安装"><a href="#rpm-安装" class="headerlink" title="rpm - 安装"></a>rpm - 安装</h2><p><strong>方法一：使用本地光盘镜像安装</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#Step1：挂载本地光盘镜像</span><br><span class="line">[root@localhost ~]<span class="meta"># mount /dev/sr0 /mnt/cdrom</span></span><br><span class="line">mount: /mnt/cdrom: WARNING: device write-<span class="keyword">protected</span>, mounted read-only.</span><br><span class="line"></span><br><span class="line">#Step2：安装软件包</span><br><span class="line">[root@localhost ~]<span class="meta"># rpm -ivh filename.rpm</span></span><br></pre></td></tr></table></figure><p><strong>方法二：网络下载软件包安装</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#Step1：将软件包从网络源下载到本地</span><br><span class="line">[root@localhost ~]<span class="meta"># wegt [-O 本地路径] 网络路径</span></span><br><span class="line"></span><br><span class="line">#Step2：安装软件包</span><br><span class="line">[root@localhost ~]<span class="meta"># rpm -ivh filename.rpm</span></span><br></pre></td></tr></table></figure><p>&nbsp;</p><h2 id="rpm-常用命令"><a href="#rpm-常用命令" class="headerlink" title="rpm - 常用命令"></a>rpm - 常用命令</h2><p><span style ="color:#40E0D0;">安装</span> </p><table><thead><tr><th align="left">命令</th><th>参考说明</th></tr></thead><tbody><tr><td align="left">rpm -i filename.rpm</td><td>安装软件包</td></tr><tr><td align="left">rpm -v filename.rpm</td><td>查看安装信息的详细信息</td></tr><tr><td align="left">rpm -h filename.rpm</td><td>以安装信息列显示安装速度</td></tr><tr><td align="left">rpm -test filename.rpm</td><td>只对安装进行测试，并不实际安装</td></tr><tr><td align="left">rpm -percent filename.rpm</td><td>以百分比的形式输出安装的进度</td></tr></tbody></table><p><span style ="color:#40E0D0;">查询</span> </p><table><thead><tr><th>命令</th><th>参考说明</th></tr></thead><tbody><tr><td>rpm -q filename.rpm</td><td>单独使用可以查询软件是否安装</td></tr><tr><td>rpm -qa filename.rpm</td><td>列出所有已安装软件名称</td></tr><tr><td>rpm -qi filename.rpm</td><td>列出指定软件的安装信息</td></tr><tr><td>rpm -ql filename.rpm</td><td>列出指定软件所有的文件名称（含路径</td></tr><tr><td>rpm -qf filename.rpm</td><td>列出指定软件的安装包</td></tr><tr><td>rpm -qd filename.rpm</td><td>列出指定软件的说明文件（文本文件）</td></tr></tbody></table><p><span style ="color:#40E0D0;">删除</span> </p><table><thead><tr><th>命令</th><th>参考说明</th></tr></thead><tbody><tr><td>rpm -e filename.rpm</td><td>在系统中卸载软件</td></tr><tr><td>rpm -v filename.rpm</td><td>查看安装信息的详细信息</td></tr><tr><td>rpm -h filename.rpm</td><td>以安装信息列显示安装速度</td></tr><tr><td>rpm -nodeps filename.rpm</td><td>忽略依赖关系强制卸载</td></tr></tbody></table><p><span style ="color:#40E0D0;">升级</span></p><table><thead><tr><th>命令</th><th>参考说明</th></tr></thead><tbody><tr><td>rpm -U filename.rpm</td><td>在系统中升级软件</td></tr><tr><td>rpm -v filename.rpm</td><td>查看升级信息的详细信息</td></tr><tr><td>rpm -h filename.rpm</td><td>以升级信息列显示安装速度</td></tr></tbody></table><p>&nbsp;</p><p>&nbsp;</p><h1 id="YUM"><a href="#YUM" class="headerlink" title="YUM"></a>YUM</h1><p>Yum（全称为 Yellow dog Updater, Modified）是一个在Fedora和RedHat以及CentOS中的Shell前端软件包管理器。基于RPM包管理，能够从指定的服务器自动下载RPM包并且安装，可以自动处理依赖性关系，请问，你有没有并且一次安装所有依赖的软件包，无须繁琐地一次次下载、安装。</p><p>&nbsp;</p><h2 id="yum-本地源配置"><a href="#yum-本地源配置" class="headerlink" title="yum - 本地源配置"></a>yum - 本地源配置</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#Step1：挂载本地光盘镜像</span><br><span class="line">[root@localhost ~]<span class="meta"># mount /dev/sr0 /mnt/cdrom</span></span><br><span class="line">mount: /mnt/cdrom: WARNING: device write-<span class="keyword">protected</span>, mounted read-only.</span><br><span class="line"></span><br><span class="line">#Step2：定义yum仓库文件</span><br><span class="line">[root@localhost ~]<span class="meta"># vim /etc/yum.repos.d/base.repo</span></span><br><span class="line">[root@localhost ~]<span class="meta"># cat /etc/yum.repos.d/base.repo</span></span><br><span class="line">[AppStream]</span><br><span class="line">name=AppStream</span><br><span class="line">baseurl=file:<span class="comment">///mnt/cdrom/AppStream</span></span><br><span class="line">enabled=<span class="number">1</span></span><br><span class="line">gpgcheck=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">[BaseOS]</span><br><span class="line">name=BaseOS</span><br><span class="line">baseurl=file:<span class="comment">///mnt/cdrom/BaseOS</span></span><br><span class="line">enabled=<span class="number">1</span></span><br><span class="line">gpgcheck=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">#Step3：清空yum缓存（避免受之前源的影响）</span><br><span class="line">[root@localhost ~]<span class="meta"># yum clean all</span></span><br><span class="line">  </span><br><span class="line">#Step4：查看yum的源列表并自动下载数据 存到本地（正常： 状态非<span class="number">0</span>）</span><br><span class="line">[root@localhost ~]<span class="meta"># yum repolist</span></span><br></pre></td></tr></table></figure><ul><li><strong>repo文件格式</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[base]#仓库的名称</span><br><span class="line">name=base  #name相当于是注释信息，随便写</span><br><span class="line">baseurl=file:/...  #此为本地光盘 的位置，及yum源的地址</span><br><span class="line">enabled=1    #是否启用默认为启用</span><br><span class="line">gpgcheck=0  #是否检查源的合法性为1时要写下一行，后面是地址</span><br><span class="line">#gpgkey=URL   #上一句为1时要加上此句，后面是地址</span><br></pre></td></tr></table></figure><p>&nbsp;</p><p>&nbsp;</p><h2 id="yum-网络源配置"><a href="#yum-网络源配置" class="headerlink" title="yum - 网络源配置"></a>yum - 网络源配置</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#Step1：进入yum源的配置目录</span><br><span class="line">[root@localhost ~]<span class="meta"># cd /etc/yum.repos.d/</span></span><br><span class="line"></span><br><span class="line">#Step2：定义yum仓库文件</span><br><span class="line">[root@localhost yum.repos.d]<span class="meta"># cat /etc/yum.repos.d/CentOS7.repo</span></span><br><span class="line">[AppStream]</span><br><span class="line">name=AppStream</span><br><span class="line">baseurl=http:<span class="comment">//mirrors.163.com/centos/7/os/x86_64/</span></span><br><span class="line">enabled=<span class="number">1</span></span><br><span class="line">gpgcheck=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">#Step3：清空yum缓存（避免受之前源的影响）</span><br><span class="line">[root@localhost ~]<span class="meta"># yum clean all</span></span><br><span class="line">  </span><br><span class="line">#Step4：查看yum的源列表并自动下载数据 存到本地（正常： 状态非<span class="number">0</span>）</span><br><span class="line">[root@localhost ~]<span class="meta"># yum repolist</span></span><br></pre></td></tr></table></figure><p>&nbsp;</p><p>网络源和本地源的配置文件格式相同，只是更改了软件包路径，写为网络源链接地址</p><ul><li><p><strong>yum源国内镜像站点</strong></p><p>网易源 <a href="http://mirrors.163.com/centos/">http://mirrors.163.com/centos/</a></p><p>阿里源 <a href="https://mirrors.aliyun.com/centos/">https://mirrors.aliyun.com/centos/</a></p><p>清华大学 <a href="https://mirror.tuna.tsinghua.edu.cn/centos/">https://mirror.tuna.tsinghua.edu.cn/centos/</a></p><p>浙江大学 <a href="http://mirrors.zju.edu.cn/centos/">http://mirrors.zju.edu.cn/centos/</a></p></li></ul><p>&nbsp;</p><p>&nbsp;</p><h2 id="yum-常用命令"><a href="#yum-常用命令" class="headerlink" title="yum - 常用命令"></a>yum - 常用命令</h2><p><span style ="color:#40E0D0;">YUM</span> </p><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>yum repolist all</td><td>列出所有仓库</td></tr><tr><td>yum list all</td><td>列出仓库所有软件包</td></tr><tr><td>yum info package</td><td>查看软件包信息</td></tr><tr><td>yum install package</td><td>安装软件包</td></tr><tr><td>yum reinstall package</td><td>重新安装软件包</td></tr><tr><td>yum update package</td><td>升级软件包</td></tr><tr><td>yum remove package</td><td>移除软件包</td></tr><tr><td>yum clean all</td><td>清楚所有仓库缓存</td></tr><tr><td>yum check-update</td><td>检查可更新的软件包</td></tr><tr><td>yum grouplist</td><td>查看系统中已经安装的软件包组</td></tr><tr><td>yum groupinstall group</td><td>安装指定的软件包组</td></tr><tr><td>yum groupremove group</td><td>移除指定的软件包组</td></tr><tr><td>yum groupinfo group</td><td>查询指定的软件包组信息</td></tr></tbody></table><p>&nbsp;</p><p><span style ="color:#138DE9;"><strong>对比：</strong> </span>  <strong>RPM只是单单下载安装本安装包，而YUM会把与该安装包相关相互依赖的其他包一起安装</strong></p><p>&nbsp;</p><p>&nbsp;</p><hr><div align="center">❤️&nbspEND&nbsp❤️</div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;RPM&quot;&gt;&lt;a href=&quot;#RPM&quot; class=&quot;headerlink&quot; title=&quot;RPM&quot;&gt;&lt;/a&gt;RPM&lt;/h1&gt;&lt;p&gt;RPM全 称 为 Redhat  Package Manager，最早由 Red Hat 公司制定实施，随后被 GNU 开源操作系统</summary>
      
    
    
    
    
    <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>YUM 报错解决：rpmdb</title>
    <link href="http://yoursite.com/2020/11/12/YUM-%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3%EF%BC%9Arpmdb/"/>
    <id>http://yoursite.com/2020/11/12/YUM-%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3%EF%BC%9Arpmdb/</id>
    <published>2020-11-12T06:17:43.000Z</published>
    <updated>2020-11-16T12:01:08.633Z</updated>
    
    <content type="html"><![CDATA[<p><span style ="color:#40E0D0;"><strong>rpmdb报错</strong> </span> </p><p>使用yum安装或者卸载某个软件时，出现如下报错：</p><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/rpmdb1.png"></p><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/rpmdb2.png"></p><p><span style ="color:#40E0D0;"><strong>报错解决</strong> </span> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@XXX ~] # cd &#x2F;var&#x2F;lib&#x2F;rpm      </span><br><span class="line">[root@XXX rpm] # ls</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">_db.001</span><br><span class="line">_db.002</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">[root@XXX rpm] # rm -rf _db.*        ##删除rpm的原始数据</span><br><span class="line">[root@XXX rpm] # rpm __rebuilddb     ##重建rpm数据</span><br><span class="line">[root@XXX rpm] # yum clean all       ##清楚yum仓库缓存</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">[root@XXX rpm] # yum update          ##更新yum仓库</span><br></pre></td></tr></table></figure><hr><div align="center">❤️END❤️</div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;span style =&quot;color:#40E0D0;&quot;&gt;&lt;strong&gt;rpmdb报错&lt;/strong&gt; &lt;/span&gt; &lt;/p&gt;
&lt;p&gt;使用yum安装或者卸载某个软件时，出现如下报错：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net</summary>
      
    
    
    
    
    <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
    <category term="ERROR" scheme="http://yoursite.com/tags/ERROR/"/>
    
  </entry>
  
  <entry>
    <title>Linux（三）用户管理</title>
    <link href="http://yoursite.com/2020/11/03/Linux%EF%BC%88%E4%B8%89%EF%BC%89%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2020/11/03/Linux%EF%BC%88%E4%B8%89%EF%BC%89%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/</id>
    <published>2020-11-03T12:37:54.000Z</published>
    <updated>2020-11-16T12:00:32.875Z</updated>
    
    <content type="html"><![CDATA[<h1 id="用户和用户组"><a href="#用户和用户组" class="headerlink" title="用户和用户组"></a>用户和用户组</h1><h2 id="用户分类"><a href="#用户分类" class="headerlink" title="用户分类"></a><strong>用户分类</strong></h2><table><thead><tr><th>管理员用户</th><th>虚拟用户（伪用户）</th><th>普通用户</th></tr></thead><tbody><tr><td>用户名固定为root UID 固定值为，拥有系统最高管理权限</td><td>不能登录系统，仅用于系统管理或系统服务</td><td>可以登录系统，在系统中只有有限</td></tr></tbody></table><h2 id="查看用户和切换用户"><a href="#查看用户和切换用户" class="headerlink" title="查看用户和切换用户"></a><strong>查看用户和切换用户</strong></h2><ul><li><p><strong>id</strong></p><p>命令名称：<em>id 用户名</em></p><p>命令功能：用于显示用户的ID，以及所属群组的</p></li></ul><ul><li><p><strong>su</strong></p><p>命令名称：<em>su 用户名</em></p><p>命令功能：变更用户身份，切换用户。</p><p>​                    •  - 变更工作目录为新用户的家目录</p><p>su后无用户名表示切换至root用户从root用户切换至普通用户无需输入密码</p></li></ul><ul><li><p><strong>sudo</strong></p><p>命令格式： <em>sudo  command</em></p><p>命令功能：允许普通用户能够执行只有root用户才有权限执行的命令</p></li></ul><h1 id="用户管理命令"><a href="#用户管理命令" class="headerlink" title="用户管理命令"></a>用户管理命令</h1><h2 id="增加用户命令"><a href="#增加用户命令" class="headerlink" title="增加用户命令"></a><strong>增加用户命令</strong></h2><ul><li><p><strong>user add</strong></p><p>命令格式： <em>useradd  [ 选项 ]  用户名</em></p><p>命令功能：增加用户</p><p>​                    •  -g  用户组：为指定用户组创建用户</p><p>​                    •  -d  目录 ：指定用户主目录</p><p>​                    •  -m 指定新建用户登入目录</p><p>​                    •  -c  对用户进行备注</p></li></ul><h2 id="管理用户命令"><a href="#管理用户命令" class="headerlink" title="管理用户命令"></a><strong>管理用户命令</strong></h2><ul><li><p><strong>passwd</strong></p><p>命令格式：<em>passwd  [ 选项 ]  用户名</em></p><p>命令功能：指定和修改用户口令</p><p>​                    •  -l  锁定密码</p><p>​                    •  -u  解锁密码</p><p>​                    •  -d  删除密码</p></li></ul><h2 id="删除用户命令"><a href="#删除用户命令" class="headerlink" title="删除用户命令"></a><strong>删除用户命令</strong></h2><ul><li><p><strong>userdel</strong></p><p>命令格式：<em>userdel  [ 选项 ]  用户名</em></p><p>命令功能：删除用户</p><p>​                    •  -r  将用户的主目录一并删除</p></li></ul><ul><li><p><strong>usermod</strong></p><p>命令格式：<em>usermod  [ 选项 ]  用户名</em></p><p>命令功能：修改用户相关信息</p><p>​                    •  修改用户名： <em>-l  新用户名   原用户名</em></p><p>​                    •  锁定账户：  <em>-L    用户名</em></p><p>​                    •  解锁账户： <em>-U    用户名</em></p></li></ul><ul><li><p><strong>示例：在Linux系统中增加用户demo，为其设置密码，再删除此用户</strong></p><p>运行如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# useradd demo</span><br><span class="line">[root@localhost ~]# passwd demo</span><br><span class="line">Changing password for user demo.</span><br><span class="line">New password: </span><br><span class="line">Retype new password: </span><br><span class="line">passwd: all authentication tokens updated successfully.</span><br><span class="line">[root@localhost ~]# ll &#x2F;home&#x2F;</span><br><span class="line">total 8</span><br><span class="line">drwx------.  3 demo           demo             78 Nov  3 05:17 demo</span><br><span class="line">drwx------.  3 xiaoli         test-g           78 Oct 27 01:32 xiaoli</span><br><span class="line">drwx------.  3 xiaowang       network-g        78 Oct 27 01:32 xiaowang</span><br><span class="line">drwx------.  3 xiaozhao       project-g        78 Oct 27 01:33 xiaozhao</span><br><span class="line">[root@localhost ~]# grep demo &#x2F;etc&#x2F;passwd</span><br><span class="line">demo:x:1007:1007::&#x2F;home&#x2F;demo:&#x2F;bin&#x2F;bash</span><br><span class="line">[root@localhost ~]# userdel -r demo</span><br><span class="line">[root@localhost ~]# grep demo &#x2F;etc&#x2F;passwd</span><br><span class="line">[root@localhost ~]# ll &#x2F;home&#x2F;</span><br><span class="line">total 8</span><br><span class="line">drwx------.  3 xiaoli         test-g           78 Oct 27 01:32 xiaoli</span><br><span class="line">drwx------.  3 xiaowang       network-g        78 Oct 27 01:32 xiaowang</span><br><span class="line">drwx------.  3 xiaozhao       project-g        78 Oct 27 01:33 xiaozhao</span><br></pre></td></tr></table></figure></li></ul><h2 id="用户影子文件"><a href="#用户影子文件" class="headerlink" title="用户影子文件"></a>用户影子文件</h2><p><strong>sadow文件中各个域的含义如表所示</strong></p><table><thead><tr><th>域</th><th>含义</th></tr></thead><tbody><tr><td>username</td><td>用户登录名</td></tr><tr><td>passwd</td><td>加密的用户口令</td></tr><tr><td>lastchg</td><td>表示从1970年1月1日起到上次修改口令所经过的天数</td></tr><tr><td>min</td><td>表示两次修改口令之间至少经过的天数</td></tr><tr><td>max</td><td>表示口令还会有效的最大天数，如果是99999则表示永不过期</td></tr><tr><td>warn</td><td>表示口令失效前多少天内系统向用户发出警告</td></tr><tr><td>inactive</td><td>表示禁止登录前用户还有效的天数</td></tr><tr><td>expire</td><td>表示用户被禁止登录的天数</td></tr><tr><td>flag</td><td>保留域，暂未使用</td></tr></tbody></table><h1 id="用户组管理命令"><a href="#用户组管理命令" class="headerlink" title="用户组管理命令"></a>用户组管理命令</h1><h2 id="增加用户组"><a href="#增加用户组" class="headerlink" title="增加用户组"></a>增加用户组</h2><ul><li><p><strong>groupadd</strong></p><p>命令格式：<em>groupadd  [ 选项 ]  用户组名</em></p><p>命令功能：增加新用户组</p><p>​                    •  -g  用户组ID  用户组名：指定新用户组的组标识</p></li></ul><h2 id="修改用户信息"><a href="#修改用户信息" class="headerlink" title="修改用户信息"></a>修改用户信息</h2><ul><li><p><strong>groupmod</strong></p><p>命令格式：groupmod  用户组</p><p>命令功能：修改用户组信息</p><p>​                    •  -g  新GID值  用户组名：为用户组的指定新标识</p><p>​                    •  -n  新用户组名  原用户组名：修改用户组名</p></li></ul><h2 id="删除用户组"><a href="#删除用户组" class="headerlink" title="删除用户组"></a>删除用户组</h2><ul><li><p><strong>groupdel</strong></p><p>命令格式：<em>groupdel  用户组</em></p><p>命令功能：删除用户组</p></li></ul><h2 id="用户组配置"><a href="#用户组配置" class="headerlink" title="用户组配置"></a>用户组配置</h2><ul><li><p><strong>gpasswd</strong></p><p>命令格式：<em>gpasswd  [ 选项 ]  用户 用户组</em></p><p>命令功能：设置用户组的用户</p><p>​                    •  -a  用户名 用户组名： 为用户组添加用户</p><p>​                    •  -d  用户名 用户组名： 移除用户组中的用户</p></li></ul><h1 id="批量增加用户"><a href="#批量增加用户" class="headerlink" title="批量增加用户"></a>批量增加用户</h1><p>Step1：按照 /etc/sudoersetc/etc/sudoerspasswd 的文件格式做一个文本文件，假设命名为user  .txt。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">user001::1010:1000:user:&#x2F;home&#x2F;user001:&#x2F;bin&#x2F;bash</span><br><span class="line">user002::1011:1000:user:&#x2F;home&#x2F;user002:&#x2F;bin&#x2F;bash</span><br><span class="line">user003::1012:1000:user:&#x2F;home&#x2F;user003:&#x2F;bin&#x2F;bash</span><br><span class="line">user004::1013:1000:user:&#x2F;home&#x2F;user004:&#x2F;bin&#x2F;bash</span><br><span class="line">user005::1014:1000:user:&#x2F;home&#x2F;user005:&#x2F;bin&#x2F;bash</span><br><span class="line">user006::1015:1000:user:&#x2F;home&#x2F;user006:&#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure><p>Step2：执行 <code>newusers&lt;user.txt</code>  命令  导入用户信息，可以查看文件/etc/sudoersetc/etc/sudoerspasswd 确认是否添加成功。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# newusers&lt;user.txt</span><br><span class="line">[root@localhost ~]# cat &#x2F;etc&#x2F;passwd | grep user00</span><br><span class="line">user001:x:1010:1000:user:&#x2F;home&#x2F;user001:&#x2F;bin&#x2F;bash</span><br><span class="line">user002:x:1011:1000:user:&#x2F;home&#x2F;user002:&#x2F;bin&#x2F;bash</span><br><span class="line">user003:x:1012:1000:user:&#x2F;home&#x2F;user003:&#x2F;bin&#x2F;bash</span><br><span class="line">user004:x:1013:1000:user:&#x2F;home&#x2F;user004:&#x2F;bin&#x2F;bash</span><br><span class="line">user005:x:1014:1000:user:&#x2F;home&#x2F;user005:&#x2F;bin&#x2F;bash</span><br><span class="line">user006:x:1015:1000:user:&#x2F;home&#x2F;user006:&#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure><p>Step3：编辑密码文本文件， 假设密码文件名passwd.txt。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">user001:123456</span><br><span class="line">user002:123456</span><br><span class="line">user003:123456</span><br><span class="line">user004:123456</span><br><span class="line">user005:123456</span><br><span class="line">user006:123456</span><br></pre></td></tr></table></figure><p>Step4：执行命令chpasswd&lt;passwd.txt，写入密码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# chpasswd&lt;passwd.txt</span><br><span class="line">[root@localhost ~]# cat &#x2F;etc&#x2F;shadow | grep user00</span><br><span class="line">user001:$6$xOO4Zj4ECJis6x&#x2F;D$JsKjiZCMjp0nKYukOuY6XB61ZvD9Ol&#x2F;77C0BpmKVhGo0ySDROgX25n4CBdOwu.hpwQEKlB7n3wbtiiHnKft7q.:18569:0:99999:7:::</span><br><span class="line">user002:$6$eZaS6zkLsNOOV$vXiA5ffvV342hYXHSphvlf28ph2NBO&#x2F;E8k7XBNy&#x2F;iJ4QXJq9f69rYqxbCzL5TxEWjKQCuzTOuSgZiVE5Kwc0W&#x2F;:18569:0:99999:7:::</span><br><span class="line">user003:$6$63dZh&#x2F;vVUyt&#x2F;j$MCjibrnaZwjx3Ugy38AawJjt3nWs6oO4SXrpl9UAinOlqnmbgyy0RPBsfzhZdsKnmni&#x2F;IsuHko3h.6Y&#x2F;jY6IA1:18569:0:99999:7:::</span><br><span class="line">user004:$6$LqF&#x2F;3&#x2F;plaeN$YtyuLY1de5aILF7msssI3.5WnO9X9khC03G8ZXSAS2Elwh&#x2F;Z&#x2F;TYwckcAfOfl153b4&#x2F;xLLE4dIrTnX7H7NapG0.:18569:0:99999:7:::</span><br><span class="line">user005:$6$nmZHpTEKHrkwjCP&#x2F;$RNKxZ59Cr50dcT4Pevn4cftIIlFd8mY1mvKhDcbDmfuM0gZzITNxSnIq3JKDYXcPD3iRaAY3zA9gquwJlyQh3&#x2F;:18569:0:99999:7:::</span><br><span class="line">user006:$6$Km.a3&#x2F;nH$uk9LJZFpsjCSmkIT6T1oypiX3PiBGs.9DFSsAXnxWEgmseGAflsivbCJfmXLhv2LOGyUq3Ar3AVT.Xk11n0gP1:18569:0:99999:7:::</span><br></pre></td></tr></table></figure><hr><div align="center">❤️END❤️</div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;用户和用户组&quot;&gt;&lt;a href=&quot;#用户和用户组&quot; class=&quot;headerlink&quot; title=&quot;用户和用户组&quot;&gt;&lt;/a&gt;用户和用户组&lt;/h1&gt;&lt;h2 id=&quot;用户分类&quot;&gt;&lt;a href=&quot;#用户分类&quot; class=&quot;headerlink&quot; title=&quot;用</summary>
      
    
    
    
    
    <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux（二）Shell编程</title>
    <link href="http://yoursite.com/2020/10/25/Linux%EF%BC%88%E4%BA%8C%EF%BC%89Shell%E7%BC%96%E7%A8%8B/"/>
    <id>http://yoursite.com/2020/10/25/Linux%EF%BC%88%E4%BA%8C%EF%BC%89Shell%E7%BC%96%E7%A8%8B/</id>
    <published>2020-10-24T16:04:37.000Z</published>
    <updated>2020-11-16T12:00:20.963Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Shell的输入输出"><a href="#Shell的输入输出" class="headerlink" title="Shell的输入输出"></a>Shell的输入输出</h1><ul><li><p><strong>示例1    从键盘  接收一个字符串并输出到屏幕上。</strong></p><p>方法二</p><p>代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">read -p <span class="string">&quot;Pleast input a string:&quot;</span> str</span><br><span class="line">echo <span class="string">&quot;You input is $str&quot;</span></span><br></pre></td></tr></table></figure><p>运行如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost hexo]# vim input-output2.sh</span><br><span class="line">[root@localhost hexo]# bash input-output2.sh</span><br><span class="line">Pleast input a string:demo</span><br><span class="line">You input is demo</span><br></pre></td></tr></table></figure></li></ul><ul><li><p><strong>示例2：编写一个shell脚本，从键盘接收一个文件名，创建该文件，再将/hexo/input-output1.sh文件中的内容copy到该文件中。</strong></p><p>代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">echo <span class="string">&quot;Please input a filename:&quot;</span></span><br><span class="line">read f_name</span><br><span class="line">touch #f_name</span><br><span class="line">cp input-output1.sh $f_name</span><br></pre></td></tr></table></figure><p>运行如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost hexo]# vim creat-copy.sh</span><br><span class="line">[root@localhost hexo]# bash creat-copy.sh</span><br><span class="line">Please input a filename:</span><br><span class="line">demo</span><br><span class="line">touch: missing file operand</span><br><span class="line">Try &#39;touch --help&#39; for more information.</span><br><span class="line">[root@localhost hexo]# cat demo</span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">echo &quot;Please input a string:&quot;</span><br><span class="line">read str</span><br><span class="line">echo &quot;You input is:$str&quot;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p><strong>示例3：echo命令与重定向的使用</strong></p><p>运行如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost hexo]# cat file</span><br><span class="line">[root@localhost hexo]# echo hello &gt;&gt; file</span><br><span class="line">[root@localhost hexo]# cat file</span><br><span class="line">hello</span><br><span class="line">[root@localhost hexo]# echo &quot;The time is &#96;date&#96;&quot;</span><br><span class="line">The time is Mon Oct 26 00:41:12 PDT 2020</span><br><span class="line">[root@localhost hexo]# echo &quot;The time is &#96;date&#96;&quot; &gt;&gt; test</span><br><span class="line">[root@localhost hexo]# cat test</span><br><span class="line">hello</span><br><span class="line">haha</span><br><span class="line">The time is Sat Oct 24 09:46:57 PDT 2020</span><br><span class="line">The time is Mon Oct 26 00:41:28 PDT 2020</span><br></pre></td></tr></table></figure></li></ul><h1 id="Shell变量"><a href="#Shell变量" class="headerlink" title="Shell变量"></a>Shell变量</h1><h2 id="内容变量"><a href="#内容变量" class="headerlink" title="内容变量"></a>内容变量</h2><p>内部变量，也称系统变量或预定义变量或Shell变量，由系统提供，不用定义，不能修改脚本调用时，常用此变量对参数和命令返回值进行判断。</p><table><thead><tr><th>变量名</th><th>含义</th></tr></thead><tbody><tr><td>$#</td><td>命令行参数的个数</td></tr><tr><td>$n</td><td>位置参 数，$1表示第 一个  参数，$2表示第二  个参数，以此类推</td></tr><tr><td>$0</td><td>当前程序的名称</td></tr><tr><td>$?</td><td>前一个命令或函数的返回码   <u>0表示成功</u></td></tr><tr><td>$*</td><td>以”参数1 参数2 …    “形式保存 所有  参数</td></tr><tr><td>$@</td><td>以”参数1””参数2” … 形式保存所有参数</td></tr><tr><td>$$</td><td>本程序的(进程ID号)PIDPID</td></tr><tr><td>$!</td><td>上一个命令的PID</td></tr></tbody></table><ul><li><p><strong>使用举例</strong></p><p>代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">echo <span class="string">&quot;This script name is $0&quot;</span></span><br><span class="line">echo <span class="string">&quot;You&#x27;ve input $# paramenters. They are $*&quot;</span></span><br><span class="line">echo <span class="string">&quot;The 1st paramenters is :$1&quot;</span></span><br><span class="line">echo <span class="string">&quot;The 2ed paramenters is :$2&quot;</span></span><br><span class="line">echo <span class="string">&quot;The PID of this program is $$&quot;</span></span><br><span class="line">echo <span class="string">&quot;The return code of teh last command is $?&quot;</span></span><br></pre></td></tr></table></figure><p>运行如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost hexo]# vim InterArg.sh</span><br><span class="line">[root@localhost hexo]# bash InterArg.sh</span><br><span class="line">This script name is InterArg.sh</span><br><span class="line">You&#39;ve input 0 paramenters. They are </span><br><span class="line">The 1st paramenters is :</span><br><span class="line">The 2ed paramenters is :</span><br><span class="line">The PID of this program is 10612</span><br><span class="line">The return code of teh last command is 0</span><br></pre></td></tr></table></figure></li></ul><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><p>当Shell程序启动时，都自动设置 一组变量，这组变量就是环境 变量。</p><p>全局环境变量在  <em>/etc/profile</em>  文件中设置；</p><p>用户环境变量在用户家目录下的  <em>.bash_profile</em>  或  <em>.bashrc</em>  文件中设置</p><p><strong>常用的环境 变量：</strong>PATH，HO ME，SHELL</p><p><strong>定义新的环境变量：</strong></p><p>​    1）间的接口执行export命令（重启后失效）间的接口</p><p>​    2）间的接口修改.bash_profile文件 -&gt; export 变量-&gt; source .bash_profile</p><h2 id="用户变量"><a href="#用户变量" class="headerlink" title="用户变量"></a>用户变量</h2><p><strong>定义变量：</strong>即用即定义，无变量类型。变量名只能由字母、数字和下划线组成且不能以数字开头</p><p><strong>调用变量：</strong>  </p><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/shili2.png"></p><h1 id="字符串-数组-运算符"><a href="#字符串-数组-运算符" class="headerlink" title="字符串 数组 运算符"></a>字符串 数组 运算符</h1><h2 id="Shell字符串"><a href="#Shell字符串" class="headerlink" title="Shell字符串"></a>Shell字符串</h2><p><strong>字符串定义：</strong>单引号、双引号或不用引号表示的一串字符，一般情况 下建议用双引号表示</p><p>​              单引号里的任  何字符都会原样输出，不会处理变量</p><p>​              双引号里可以有变量和转义字符</p><p><strong>字符串拼接：</strong>使用变量进行拼接</p><p><strong>获取字符串长度：</strong> </p><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/shili4.png"></p><h2 id="Shell数组"><a href="#Shell数组" class="headerlink" title="Shell数组"></a>Shell数组</h2><p><strong>数组定义：</strong>Bash Shell 只支持一维数组，初始化时不需要定义数组 大小数组 元素的下标由0开始。Shell 数组用括号来表示，元素用”空格”符号分割</p><p><strong>读取数组中的元素：</strong> </p><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/shili3.png"></p><p><strong>读取整个数组：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/shili.png"></p><p>​                        &nbsp;  </p><ul><li><p><strong>使用举例</strong></p><p>代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">arr=(<span class="number">1</span> <span class="string">&quot;mandy&quot;</span> <span class="string">&quot;while there is life,there is hope&quot;</span>)</span><br><span class="line">echo <span class="string">&quot;First element is $&#123;arr[0]&#125;&quot;</span></span><br><span class="line">echo <span class="string">&quot;Second element is $&#123;arr[1]&#125;&quot;</span></span><br><span class="line">echo <span class="string">&quot;Third element is $&#123;arr[2]&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">echo <span class="string">&quot;The whole array is $&#123;arr[*]&#125;&quot;</span></span><br></pre></td></tr></table></figure><p>运行如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost hexo]# vim read-array.sh</span><br><span class="line">[root@localhost hexo]# bash read-array.sh</span><br><span class="line">First element is 1</span><br><span class="line">Second element is mandy</span><br><span class="line">Third element is while there is life,there is hope</span><br><span class="line">The whole array is 1 mandy while there is life,there is hope</span><br></pre></td></tr></table></figure></li></ul><h2 id="Shell运算符"><a href="#Shell运算符" class="headerlink" title="Shell运算符"></a>Shell运算符</h2><table><thead><tr><th>运算符</th><th>解释</th></tr></thead><tbody><tr><td>( )  [ ]</td><td>括号</td></tr><tr><td>! ～  ++  –  +  -</td><td>取反、按位取反、自增、自减、正负号</td></tr><tr><td>+  - *  /  %</td><td>加、减、乘、除、取模</td></tr><tr><td>&lt;&lt;  &gt;&gt;</td><td>左移 、右移</td></tr><tr><td>&lt;  &lt;=  &gt;=  &gt;</td><td>小于、小于等于、大于等于、大于</td></tr><tr><td>==  !=</td><td>等于、不等于</td></tr><tr><td>&amp; ^ |</td><td>与、异或、或</td></tr><tr><td>&amp;&amp; ||</td><td>逻辑与、逻辑或</td></tr><tr><td>? :</td><td>条件</td></tr><tr><td>=  + =  -=  *=  /=  &amp;=  ^=</td><td>赋值</td></tr><tr><td>,</td><td>逗号</td></tr></tbody></table><ul><li><p><strong>使用举例</strong></p><p>代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">a=<span class="number">5</span></span><br><span class="line">b=<span class="number">4</span></span><br><span class="line">echo $&#123;a&#125;+$&#123;b&#125;</span><br><span class="line"></span><br><span class="line">let sum=a+b</span><br><span class="line">let sub=a-b</span><br><span class="line">let mul=a*b</span><br><span class="line">let div=a/b</span><br><span class="line">echo <span class="string">&quot;the sum is $sum&quot;</span></span><br><span class="line">echo <span class="string">&quot;the sub is $sub&quot;</span></span><br><span class="line">echo <span class="string">&quot;the mul is $mul&quot;</span></span><br><span class="line">echo <span class="string">&quot;the div is $div&quot;</span></span><br><span class="line"></span><br><span class="line">echo <span class="string">&quot;Sum : $a + $b = $[$a + $b]&quot;</span></span><br><span class="line">echo <span class="string">&quot;Sub : $a - $b = $[$a - $b]&quot;</span></span><br><span class="line">echo <span class="string">&quot;Mul : $a * $b = $[$a * $b]&quot;</span></span><br><span class="line">echo <span class="string">&quot;Div : $a / $b = $[$a / $b]&quot;</span></span><br></pre></td></tr></table></figure><p>运行如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost hexo]# vim arithmetic.sh</span><br><span class="line">[root@localhost hexo]# bash arithmetic.sh</span><br><span class="line">5+4</span><br><span class="line">the sum is 9</span><br><span class="line">the sub is 1</span><br><span class="line">the mul is 20</span><br><span class="line">the div is 1</span><br><span class="line">Sum : 5 + 4 &#x3D; 9</span><br><span class="line">Sub : 5 - 4 &#x3D; 1</span><br><span class="line">Mul : 5 * 4 &#x3D; 20</span><br><span class="line">Div : 5 &#x2F; 4 &#x3D; 1</span><br></pre></td></tr></table></figure></li></ul><h1 id="Shell程序"><a href="#Shell程序" class="headerlink" title="Shell程序"></a>Shell程序</h1><h2 id="Shell程序调试"><a href="#Shell程序调试" class="headerlink" title="Shell程序调试"></a>Shell程序调试</h2><p>语法格式：  bash  -x/-v  脚本文件名     </p><p>​                    •  -n  用于检查语法错误，不会执行程序</p><p>​                    •  -x  逐行显示执行的命令和结果，类似单步调试-</p><p>​                    •  -v  一边读取命令一边显示结果，与-x的不同是-x只显示能执行的命令</p><h2 id="Shell选择结构"><a href="#Shell选择结构" class="headerlink" title="Shell选择结构"></a>Shell选择结构</h2><h3 id="test命令"><a href="#test命令" class="headerlink" title="test命令"></a>test命令</h3><p><strong>命令格式：</strong>test  表达式或[ 表达式 ]</p><p><strong>命令功能：</strong>用来判断表达式的结果。</p><p>作用：  进行数值、字符和文件三种类型的测试</p><p>​             用来判断表达式的返回值</p><p>​            如果表达式为真，返回值为0（TRUE）</p><p>​            如果表达式为假，返回值为1（FALSE）</p><ul><li><p><strong>使用举例</strong></p><p>代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">a=<span class="number">100</span></span><br><span class="line">b=<span class="number">50</span></span><br><span class="line">test $&#123;a&#125; -eq $&#123;b&#125;</span><br><span class="line">echo $?</span><br></pre></td></tr></table></figure><p>运行如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost hexo]# vim judge.sh</span><br><span class="line">[root@localhost hexo]# bash judge.sh</span><br><span class="line">1</span><br></pre></td></tr></table></figure></li></ul><h3 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h3><h4 id="分支格式"><a href="#分支格式" class="headerlink" title="分支格式"></a>分支格式</h4><p>不同分支语句格式：</p><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/Shell9.png"></p><p>要点：</p><p>​              if语句进行数值、字符和文件三种类型的测试</p><p>​              [ ] 中条件表达式两边与括号之间，if与括号间都要有空格</p><p>​              if…then语句如果放在同一行，条件语句后必须要有分号；不推荐</p><h4 id="数值比较"><a href="#数值比较" class="headerlink" title="数值比较"></a>数值比较</h4><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-eq  （equal to）</td><td>等于则为真</td></tr><tr><td>-ne  （not equal to）</td><td>不等于则为真</td></tr><tr><td>-gt   （greater than）</td><td>大于则为真</td></tr><tr><td>-ge  （greater or equal）</td><td>大于等于则为真</td></tr><tr><td>-lt    （less than）</td><td>小于则为真</td></tr><tr><td>-le   （less or equal）</td><td>小于等于则为真</td></tr></tbody></table><ul><li><p><strong>举例：输入两个数比较大小</strong></p><p>代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bsah</span><br><span class="line">echo <span class="string">&quot;Plaese input num1:&quot;</span></span><br><span class="line">read num1</span><br><span class="line">echo <span class="string">&quot;Please input num2:&quot;</span></span><br><span class="line">read num2</span><br><span class="line"><span class="keyword">if</span> [ $&#123;num1&#125; -eq $&#123;num2&#125; ]</span><br><span class="line">then</span><br><span class="line">        echo <span class="string">&quot;$&#123;num1&#125; is equal to $&#123;num2&#125;&quot;</span></span><br><span class="line">elif [ $&#123;num1&#125; -gt $&#123;num2&#125; ]</span><br><span class="line">then</span><br><span class="line">        echo <span class="string">&quot;$&#123;num1&#125; is greater than $&#123;num2&#125;&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        echo <span class="string">&quot;$&#123;num1&#125; is less than $&#123;num2&#125;&quot;</span></span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>运行如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost hexo]# vim num-comp.sh</span><br><span class="line">[root@localhost hexo]# bash num-comp.sh</span><br><span class="line">Plaese input num1:</span><br><span class="line">4</span><br><span class="line">Please input num2:</span><br><span class="line">6</span><br><span class="line">4 is less than 6</span><br><span class="line">[root@localhost hexo]# bash num-comp.sh</span><br><span class="line">Plaese input num1:</span><br><span class="line">5</span><br><span class="line">Please input num2:</span><br><span class="line">5</span><br><span class="line">5 is equal to 5</span><br><span class="line">[root@localhost hexo]# bash num-comp.sh</span><br><span class="line">Plaese input num1:</span><br><span class="line">6</span><br><span class="line">Please input num2:</span><br><span class="line">4</span><br><span class="line">6 is greater than 4</span><br></pre></td></tr></table></figure></li></ul><h4 id="字符比较"><a href="#字符比较" class="headerlink" title="字符比较"></a>字符比较</h4><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>=</td><td>等于则为真</td></tr><tr><td>！=</td><td>不相等则为真</td></tr><tr><td>-z 字符串</td><td>字符串的长度为零则为真</td></tr><tr><td>-n 字符串</td><td>字符串的长度不为零则为真</td></tr></tbody></table><ul><li><p><strong>示例：检查输入的字符串是否为空</strong></p><p>代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">echo <span class="string">&quot;PLease input a string:&quot;</span></span><br><span class="line">read str1</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -z $&#123;str1&#125; ]</span><br><span class="line">then</span><br><span class="line">        echo <span class="string">&quot;This string is null.&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        echo <span class="string">&quot;This string is not null.&quot;</span></span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>运行如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost hexo]# vim char-comp.sh</span><br><span class="line">[root@localhost hexo]# bash char-comp.sh</span><br><span class="line">PLease input a string:</span><br><span class="line"></span><br><span class="line">This string is null.</span><br><span class="line">[root@localhost hexo]# bash char-comp.sh</span><br><span class="line">PLease input a string:</span><br><span class="line">test</span><br><span class="line">This string is not null.</span><br></pre></td></tr></table></figure></li></ul><h4 id="文件测试"><a href="#文件测试" class="headerlink" title="文件测试"></a>文件测试</h4><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-e 文件名</td><td>如果文件存在则为真</td></tr><tr><td>-r 文件名</td><td>如果文件存在且可读则为真</td></tr><tr><td>-w 文件名</td><td>如果文件存在且可写则为真</td></tr><tr><td>-x 文件名</td><td>如果文件存在且可执行则为真</td></tr><tr><td>-s 文件名</td><td>如果文件存在且至少有一个字符则为真</td></tr><tr><td>-d 文件名</td><td>如果文件存在且为目录则为真</td></tr><tr><td>-f 文件名</td><td>如果文件存在且为普通文件则为真</td></tr><tr><td>-c 文件名</td><td>如果文件存在且为字符型特殊文件则为真</td></tr><tr><td>-b 文件名</td><td>如果文件存在且为块特殊文件则为真</td></tr></tbody></table><ul><li><p><strong>示例：</strong> <strong>用户输入一串字符，判断/hexo/testlog.txt是否存在，如果存在，写入字符，如果不存在，则创建文件后写入。</strong></p><p>代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">echo <span class="string">&quot;Please input a string:&quot;</span></span><br><span class="line">read str</span><br><span class="line"></span><br><span class="line">filename=testlog.txt</span><br><span class="line"><span class="keyword">if</span> [ ! -e $&#123;filename&#125; ]</span><br><span class="line">then</span><br><span class="line">        touch $&#123;filename&#125;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">echo $&#123;str&#125; &gt;&gt; $&#123;filename&#125;</span><br></pre></td></tr></table></figure><p>运行如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost hexo]# vim filetest.sh</span><br><span class="line">[root@localhost hexo]# bash filetest.sh</span><br><span class="line">Please input a string:</span><br><span class="line">It is never too old to learn.</span><br><span class="line">[root@localhost hexo]# cat testlog.txt</span><br><span class="line">It is never too old to learn.</span><br></pre></td></tr></table></figure></li></ul><h3 id="逻辑连接操作"><a href="#逻辑连接操作" class="headerlink" title="逻辑连接操作"></a>逻辑连接操作</h3><p>Shell中的逻辑连接操作符：与( -a )、或( -o )、非( ! )优先级：“!” &gt;“ -a” &gt; “-o”</p><ul><li><p><strong>示例1：编写shell脚本，判断 /etc目录下是否同时存在hostname与hosts文件，并输出结果。</strong> </p><p>代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">filename1=/etc/hostname</span><br><span class="line">filename2=/etc/hosts</span><br><span class="line"><span class="keyword">if</span> [ -e $&#123;filename1&#125; -a -e $&#123;filename2&#125; ]</span><br><span class="line">then</span><br><span class="line">        echo <span class="string">&quot;$&#123;filename1&#125; and $&#123;filename2&#125; all exist&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        echo <span class="string">&quot;$&#123;filename1&#125; or $&#123;filename2&#125; does not exist&quot;</span></span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>运行如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost hexo]# vim log-con.sh</span><br><span class="line"></span><br><span class="line">[16]+  Stopped                 vim log-con.sh</span><br><span class="line">[root@localhost hexo]# bash log-con.sh</span><br><span class="line">&#x2F;etc&#x2F;hostname and &#x2F;etc&#x2F;hosts all exist</span><br></pre></td></tr></table></figure></li></ul><ul><li><p><strong>示例2：变量是否为y或者Y</strong> </p><p>代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">SAN=<span class="string">&quot;A&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ $SAN = <span class="string">&quot;Y&quot;</span> -o $SAN=<span class="string">&quot;y&quot;</span> ]</span><br><span class="line">then</span><br><span class="line">        echo <span class="string">&quot;It is y or Y&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        echo <span class="string">&quot;It is not y or Y&quot;</span></span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>运行如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost hexo]# vim log-con2.sh</span><br><span class="line">[root@localhost hexo]# bash log-con2.sh</span><br><span class="line">It is y or Y</span><br></pre></td></tr></table></figure></li></ul><h3 id="case语句"><a href="#case语句" class="headerlink" title="case语句"></a>case语句</h3><p>语句格式如下：</p><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/Shell15.png"></p><ul><li><p><strong>使用举例</strong></p><p>代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"><span class="keyword">case</span> $<span class="number">1</span> in</span><br><span class="line">        <span class="number">1</span>) echo <span class="string">&quot;Monday&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">        <span class="number">1</span>) echo <span class="string">&quot;Tuesday&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">        <span class="number">3</span>) echo <span class="string">&quot;Wednesday&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">        <span class="number">4</span>) echo <span class="string">&quot;Tursday&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">        <span class="number">5</span>) echo <span class="string">&quot;Friday&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><p>运行如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost hexo]# vim casetest1.sh</span><br><span class="line">[root@localhost hexo]# bash casetest1.sh 1</span><br><span class="line">Monday</span><br><span class="line">[root@localhost hexo]# bash casetest1.sh 3</span><br><span class="line">Wednesday</span><br><span class="line">[root@localhost hexo]# bash casetest1.sh 5</span><br><span class="line">Friday</span><br></pre></td></tr></table></figure></li></ul><p>说明：</p><p>​              取值可以为变量或常量</p><p>​              执行完匹配模式的命令后不再继续其他模式</p><p>​              模式字符串中可以使用通配符：</p><p>​              当一个模式字符串中包含多个模式时，可以使用“|”隔开，表示“或”的关系</p><p>​              case的各模式之间不应重复出现</p><ul><li><p><strong>示例：用户从键盘输入一个字符，然后判断该字符是否为字母、数字或其他字符，并输出相应的提示信息</strong></p><p>代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">read -p <span class="string">&quot;Please input a character:&quot;</span> key</span><br><span class="line"><span class="keyword">case</span> $&#123;key&#125; in</span><br><span class="line">        [a-z]|[A-Z])</span><br><span class="line">                echo <span class="string">&quot;$&#123;key&#125; is a letter.&quot;</span>;;</span><br><span class="line">        [<span class="number">0</span><span class="number">-9</span>])</span><br><span class="line">                echo <span class="string">&quot;$&#123;key&#125; is digit.&quot;</span>;;</span><br><span class="line">        *)</span><br><span class="line">                echo <span class="string">&quot;$&#123;key&#125; is not a letter or digit.&quot;</span>;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><p>运行如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost hexo]# vim casetest2.sh</span><br><span class="line">[root@localhost hexo]# bash casetest2.sh</span><br><span class="line">Please input a character:a</span><br><span class="line">a is a letter.</span><br><span class="line">[root@localhost hexo]# bash casetest2.sh</span><br><span class="line">Please input a character:4</span><br><span class="line">4 is digit.</span><br><span class="line">[root@localhost hexo]# bash casetest2.sh</span><br><span class="line">Please input a character:%</span><br><span class="line">% is not a letter or digit.</span><br></pre></td></tr></table></figure></li></ul><h1 id="Shell循环结构"><a href="#Shell循环结构" class="headerlink" title="Shell循环结构"></a>Shell循环结构</h1><h2 id="for语句"><a href="#for语句" class="headerlink" title="for语句"></a>for语句</h2><p>语句格式如下：</p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/Shell18.png" style="zoom:50%;" /><p>说明：</p><p>​        循环in列表中的值执行命令</p><p>​        in列表可以由命令生成</p><p>​              正则表达式</p><p>​              由命令生成</p><p>​              脚本参数列表</p><p>​              字符串</p><p>​              文件名</p><p>​              数组</p><ul><li><p><strong>示例1：输出列表中的所有值</strong></p><p>代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"><span class="keyword">for</span> str in <span class="string">&quot;redhat&quot;</span> <span class="string">&quot;centos&quot;</span> <span class="string">&quot;ubunto&quot;</span> <span class="string">&quot;susi&quot;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        echo $str</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="built_in">array</span>=(redhat centos ubunto susi)</span><br><span class="line"><span class="keyword">for</span> name in $&#123;<span class="built_in">array</span>[@]&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        echo $name</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>运行如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost hexo]# vim fortest1.sh</span><br><span class="line">[root@localhost hexo]# bash fortest1.sh</span><br><span class="line">redhat</span><br><span class="line">centos</span><br><span class="line">ubunto</span><br><span class="line">susi</span><br><span class="line">redhat</span><br><span class="line">centos</span><br><span class="line">ubunto</span><br><span class="line">susi</span><br></pre></td></tr></table></figure></li></ul><ul><li><p><strong>示例2：备份当前目录下所有.sh文件</strong></p><p>代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">mkdir fortest</span><br><span class="line"><span class="keyword">for</span> file in `ls*.sh`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        cp $file fortest/$file.sh</span><br><span class="line">done</span><br></pre></td></tr></table></figure></li></ul><ul><li><p><strong>示例3：输入一个数n，求从1到该数的和 （C语言风格）</strong></p><p>代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">read -p <span class="string">&quot;Please input a number:&quot;</span> input</span><br><span class="line">sum=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">0</span>;i&lt;=$&#123;input&#125;;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        let sum=i+sum</span><br><span class="line">done</span><br><span class="line">echo <span class="string">&quot;Sum=$sum&quot;</span></span><br></pre></td></tr></table></figure><p>运行如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost hexo]# vim fortest3.sh</span><br><span class="line">[root@localhost hexo]# bash fortest3.sh</span><br><span class="line">Please input a number:5</span><br><span class="line">Sum&#x3D;15</span><br></pre></td></tr></table></figure></li></ul><hr><div align="center">❤️END❤️</div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Shell的输入输出&quot;&gt;&lt;a href=&quot;#Shell的输入输出&quot; class=&quot;headerlink&quot; title=&quot;Shell的输入输出&quot;&gt;&lt;/a&gt;Shell的输入输出&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;示例1    从键盘  接收一个字符串并输</summary>
      
    
    
    
    
    <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux（一）文件管理</title>
    <link href="http://yoursite.com/2020/10/24/Linux%EF%BC%88%E4%B8%80%EF%BC%89%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2020/10/24/Linux%EF%BC%88%E4%B8%80%EF%BC%89%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/</id>
    <published>2020-10-24T05:27:36.000Z</published>
    <updated>2020-11-16T12:00:52.799Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux目录结构"><a href="#Linux目录结构" class="headerlink" title="Linux目录结构"></a>Linux目录结构</h1><table><thead><tr><th><strong>/bin</strong></th><th><strong>可执行的命令文件</strong></th><th><strong>/root</strong></th><th><strong>根用户的家目录</strong></th></tr></thead><tbody><tr><td><strong>/boot</strong></td><td><strong>系统核心文件和开机所需文件</strong></td><td><strong>/sbin</strong></td><td><strong>root用户才能执行的命令文件</strong></td></tr><tr><td><strong>/dev</strong></td><td><strong>系统设备相关文件</strong></td><td><strong>/srv</strong></td><td><strong>服务启动后访问的数据文件</strong></td></tr><tr><td><strong>/etc</strong></td><td><strong>系统配置文件</strong></td><td><strong>/tmp</strong></td><td><strong>程序临时存放的文件</strong></td></tr><tr><td><strong>/home</strong></td><td><strong>非root用户的家目录</strong></td><td><strong>/opt</strong></td><td><strong>第三方软件安装目录</strong></td></tr><tr><td><strong>/lib</strong></td><td><strong>系统和程序的库函数文件</strong></td><td><strong>/media</strong></td><td><strong>移动设备相关文件</strong></td></tr></tbody></table><h1 id="目录操作命令"><a href="#目录操作命令" class="headerlink" title="目录操作命令"></a>目录操作命令</h1><ul><li><p><strong>cd</strong></p><p>命令格式：<em>cd  [ 目录名称 ]</em></p><p>功能描述：将当前目录切换到指定的目录；若无指定目录，则回到用户主目录。</p><p>执行权限：All User</p></li></ul><ul><li><p><strong>pwd</strong></p><p>命令格式：<em>pwd  [ 选项 ]</em></p><p>功能描述：显示用户当前所处的工作目录</p><p>执行权限：All User</p></li></ul><ul><li><p><strong>mkdir</strong></p><p>命令格式：<em>mkdir  选项  [ -p ]  目录名</em></p><p>功能描述：创建目录</p><p>​                    •  -p  表示创建嵌套目录</p><p>​                    •  -v  显示目录创建信息</p><p>执行权限：All User</p></li></ul><ul><li><p><strong>rmdir</strong></p><p>命令格式：<em>rmdir  选项  [ -p ]  目录名</em></p><p>功能描述：删除空目录</p><p>​                    •  -p 可以递归的删除空目录</p><p>执行权限：All User</p></li></ul><h1 id="文件操作命令"><a href="#文件操作命令" class="headerlink" title="文件操作命令"></a>文件操作命令</h1><ul><li><p><strong>创建文件 touch</strong></p><p>命令格式：<em>touch  [ 选项 ]  [ 文件 ]</em></p><p>功能描述：生成空文件和修改文件存取时间</p><p>​                    •  创建重复的文件会修改时间戳</p><p>​                    •  -d  以 yyyymmdd 的形式给出要修改的时间</p><p>示例图：</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%861.png"></p><ul><li><p><strong>删除文件 rm</strong></p><p>命令格式：<em>rm  [ 选项 ]  [ 文件名/目录名 ]</em></p><p>功能描述：删除文件或目录</p><p>​                    •  -f  直接删除，不做提示</p><p>​                    •  -r  删除目录及目录内文件</p><p>示例图：</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%862.png"></p><ul><li><p><strong>复制文件 cp</strong></p><p>命令格式：<em>cp  [ 源文件/目录 ]  [ 目的文件/目录 ]</em></p><p>功能描述：复制文件</p><p>​                    •  可以拷贝多个文件</p><p>​                    •  -r  拷贝目录</p><p>​                    •  -f  对于同名文件会直接覆盖</p><p>​                    •  -p 完全复制，连同属性</p><p>示例图：</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%863.png"></p><ul><li><p><strong>移动文件 mv</strong></p><p>命令格式：<em>mv  [ 源文件/目录 ]  [ 目的文件/目录 ]</em></p><p>功能描述：1、移动文件/目录  </p><p>​                   2、对文件/目录改名</p><p>​                    •  -i  交互式覆盖，覆盖前给出提示确认是否覆盖</p><p>​                    •  -f  直接覆盖，不做提示</p><p>示例图：</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%864.png"></p><h1 id="文件属性"><a href="#文件属性" class="headerlink" title="文件属性"></a>文件属性</h1><ul><li><p><strong>列出文件和属性命令 ls</strong></p><p>命令格式：<em>ls  [ 选项 ]  [ 文件 ]</em></p><p>功能描述：显示指定路径下的目录、文件列表</p><p>​                    •  -a  显示所有文件，包括隐藏文件</p><p>​                    •  -l  使用长格式显示文件详细信息</p><p>​                    •  -i  查看文件节点号</p><p>执行权限：All User</p><p>示例图：</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%865.png"></p><ul><li><p>文件属性</p><p>属性解释如图：</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%866.png"></p><table><thead><tr><th><strong>r</strong></th><th><strong>读权限</strong></th><th><strong>4</strong></th></tr></thead><tbody><tr><td><strong>w</strong></td><td><strong>写权限</strong></td><td><strong>2</strong></td></tr><tr><td><strong>x</strong></td><td><strong>执行权限</strong></td><td><strong>1</strong></td></tr><tr><td><strong>-</strong></td><td><strong>表示没有改权限</strong></td><td><strong>0</strong></td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%867.png"></p><table><thead><tr><th><strong>-</strong></th><th><strong>普通文件</strong></th></tr></thead><tbody><tr><td><strong>d</strong></td><td><strong>目录文件</strong></td></tr><tr><td><strong>l</strong></td><td><strong>链接文件</strong></td></tr><tr><td><strong>c</strong></td><td><strong>字符设备文件</strong></td></tr><tr><td><strong>b</strong></td><td><strong>块设备文件</strong></td></tr><tr><td><strong>f</strong></td><td><strong>常规文件</strong></td></tr></tbody></table><p>​        </p><ul><li><p><strong>权限修改 chmod</strong></p><p>修改文件权限：<em>chmod  [ 权限 ]  [ 文件 ]</em> </p><p>示例：<em>chmod 744 test.sh</em></p><p>修改所属用户和用户组：<em>chown  [ 用户 ]  :  [ 用户组 ]  [ 文件名 ]</em></p><p>示例：<em>chown mandy:root test.sh</em></p></li></ul><h1 id="链接文件"><a href="#链接文件" class="headerlink" title="链接文件"></a>链接文件</h1><ul><li><p><strong>符号（软）链接</strong></p><p>命令格式：<em>ln  -s  [ 链接指向的文件 ]  [ 链接名 ]</em></p><p>示例图：</p><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%868.png"></p></li></ul><p>  <strong>软连接特点</strong></p><p>  1.软链接，以路径的形式存在</p><p>  2.软链接可以跨文件系统，硬链接不可以</p><p>  3.软链接可以对一个不存在的文件名进行链接</p><p>  4.软链接可以对目录进行链接</p><ul><li><p><strong>硬链接</strong></p><p>命令格式：<em>ln  [ 链接指向的文件 ]  [ 链接名 ]</em></p><p>示例图：</p><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%869.png"></p></li></ul><p>​    <strong>硬链接特点</strong></p><p>​    1.硬链接，以文件副本的形式存在，但不占用实际 空间</p><p>​    2.不允许 给目录创建硬链接</p><p>​    3.硬链接只有在同一个文件系统中才能创建</p><h1 id="查看文件命令"><a href="#查看文件命令" class="headerlink" title="查看文件命令"></a>查看文件命令</h1><ul><li><p><strong>查看文件 cat</strong></p><p>命令格式：<em>cat  [ 选项 ]  [ 文件 ]</em></p><p>功能描述：查看<u>较小</u>的文本文件</p><p>​                    •  -b  显示文件每行的行编号（不包括空行）</p><p>​                    •  -E  在每行的未尾显示$符号，表示行结束</p><p>​                    •  -n  显示文件所有行的行编号</p><p>​                    •  -s  将相连的多个空行用一个空行来代替</p><p>示例图：</p><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%8610.png"></p></li></ul><ul><li><p><strong>连接合并文件 cat</strong></p><p>命令格式：<em>cat   file1   file2 &gt; file3</em></p><p>格式解释：&gt;为重定向符，file3可以为不存在的文件</p><p>示例图：</p><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%8611.png"></p></li></ul><ul><li><p><strong>查看文件 more</strong></p><p>命令格式：<em>more  [ 选项 ]  [ 文件 ]</em></p><p>功能描述：查看<u>较大</u>的文本文件</p><p>​                    •  -number  指定一个整数  ，表示一屏显示多少行</p><p>​                    •  -d  在屏幕底部显示帮助信息</p><p>​                    •  -s  将相连的多个空行用一个空行来代替</p><p>进入more状态后：</p><p>​                    •  q  退出</p><p>​                    •  Enter键  显示下一行</p><p>​                    •  空格键  显示下一页</p></li></ul><ul><li><p><strong>查看文件 less</strong></p><p>命令格式：<em>less  [ 选项 ]  [ 文件 ]</em></p><p>功能描述：常用于显示较大文件的内容</p><p>​                    •  -M  在显示屏的最后一行输出：文件名、当前显示的行数、总行数和光标所处文档位置</p><p>​                    •  -s  将相连的多个空行用一个空行来代替</p><p>​                    •  -S  截断过长的行而不换行显示</p><p><strong>less状态的上下查看功能：</strong></p><p>​    对于较大的文件，一屏显示不完，使用上下箭头可以翻看文件的内容</p><p><strong>less状态的查找功能：</strong></p><p>​    在文件底部输入：/关键字</p><p>​    输入的关键字将被高亮显示</p></li></ul><ul><li><p><strong>查看文件 head/tail</strong></p><p>命令格式： <em>head/tail  [ 选项 ]  [ 文件 ]</em></p><p>功能描述：显示文件头/尾的内容，默认10行，常常 用于服务器  维护 的查看日志 场景</p><p>​                    •  -K  显示文件的前/后K行内容</p><p>​                    •  -c  K显示每个文件的前K字节内容</p><p>​                    •  -f  实时刷新文件(用于tail命令)</p></li></ul><h1 id="通配符"><a href="#通配符" class="headerlink" title="通配符"></a>通配符</h1><p>​    </p><table><thead><tr><th>*****</th><th><strong>代表任意长度字符串（包括0长度）</strong></th></tr></thead><tbody><tr><td><strong>?</strong></td><td><strong>代表任意单个字符</strong></td></tr><tr><td><strong>[c1-c2]</strong></td><td><strong>匹配c1<del>c2字符序列中的任意的单一字符（前提：c1</del>c2是一个有序的字符序列，一般为数字序列或英文字符序列）</strong></td></tr><tr><td><strong>[c1c2…cn]  [c1,c2,…,cn]</strong></td><td><strong>匹配中括号之间字符列表中的任意的单一字符</strong></td></tr><tr><td><strong>{string1,string2,…,stringN}</strong></td><td><strong>表示匹配string1 string2 直至stringN这N个字符串中的某个字符串</strong></td></tr><tr><td><strong>!</strong></td><td><strong>感叹号往往和[]与{}联用，表示对其中的内容取反</strong></td></tr></tbody></table><h1 id="查找文件命令"><a href="#查找文件命令" class="headerlink" title="查找文件命令"></a>查找文件命令</h1><ul><li><p><strong>文件查找 find</strong></p><p>功能： 在指定的目录结构中搜索文件，并执行指定的操作。</p><p>用法： find  [ 查找范围 ]  &lt;查找条件&gt;  [ 动作 ]</p><p>查找范围： 指定要查找的目录 ，省略表示在当前目录及子目录中查找。</p><p>查找条件： 指定查找文件的具体条件，如：文件名、类型、大小、修改时间等。</p><p>动 作： 对查找的文件做的进一步处理  。  </p></li></ul><ul><li><p><strong>根据文件名查找</strong></p><p>find  [ 查范围 ]  -name  文件名            根据文件名查找   </p><p>find  [ 查找范围 ]  -iname  文件名            据文件名查找，忽略大小写。</p><p>文件名：</p><p>•  精确的名称          </p><p>•  含有通配符的关键字，关键字需要加引号“”或 ’’</p><p>示例图：</p><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%8612.png"></p></li></ul><ul><li><p><strong>根据文件类型查找</strong></p><p><em>find  [ 查找范围 ]  –type</em>            文件类型字符 </p><p>示例图：</p><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%8613.png"></p></li></ul><ul><li><p><strong>根据时间属性查找</strong></p><p><em>find  [ 查找范围 ]  -mtime  n</em>            查找过去n天被修改过的文件</p><table><thead><tr><th><strong>-mmin n</strong></th><th><strong>在过去 n 分钟内被修改过</strong></th></tr></thead><tbody><tr><td><strong>-atime n</strong></td><td><strong>在过去n天内被读取/root/tmp执行过的文件</strong></td></tr><tr><td><strong>-atime n</strong></td><td><strong>在过去 n 分钟内被读取/root/tmp执行过的文件</strong></td></tr><tr><td><strong>-ctime n</strong></td><td><strong>在过去n 天内属性被修改过的文件</strong></td></tr><tr><td><strong>-cmin n</strong></td><td><strong>在过去n 分钟内属性被修改过的文件</strong></td></tr></tbody></table><p>时间范围：</p><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%8614.png"></p></li></ul><ul><li><p><strong>find的复合条件</strong></p><p>逻辑运算符 - a   –o  ! 组成复合条件</p><p>​    •  -a     and  表示  “与”</p><p>​    •  -o     or     表示  “或”</p><p>​    •  -!      not   表示   “取反”</p></li></ul><ul><li><p><strong>其他查找条件</strong></p><table><thead><tr><th><strong>-size  -n c/k/m/g</strong></th><th><strong>根据文件大小(n/nk/nm/ng字节)查找</strong></th></tr></thead><tbody><tr><td><strong>-perm  文件权限数字</strong></td><td><strong>根据文件的权限进行查找</strong></td></tr><tr><td><strong>-user  ‘用户名’</strong></td><td><strong>根据用户名查找</strong></td></tr><tr><td><strong>-uid  用户id</strong></td><td><strong>根据用户id查找</strong></td></tr><tr><td><strong>-group  ‘用户组名‘</strong></td><td><strong>根据用户组名查找</strong></td></tr><tr><td><strong>-gid  用户id</strong></td><td><strong>根据用户组id查找</strong></td></tr></tbody></table></li></ul><ul><li><p><strong>find命令查到结果后对文件的操作</strong></p><p>命令格式：<em>find  <path> &lt;-option&gt; [-print | -ls]  [-exec|-ok <command>    ;]</em></p><!--其中command 可以为命令或者shell脚本->[ -exec ]  示例：*find . -name 'f*' -exec cat  \;*![](https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/文件管理15（1）.png)[ -ok ]  示例：*find . -name 'f*' -ok cat  \;*![](https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/文件管理19.png)</li></ul><ul><li><p><strong>文件查找 locate</strong></p><p>命令格式：<em>locate  [ 文件名关键字 ]</em></p><p>功能描述：在保存 文件与目录名称的系统数据库  <em>/var/lib/mlocate/mlocate.db</em>  查找符合条件的文件或目录</p><p>示例：<em>locate .sh</em>            查找系统中所有.txtsh文件</p></li></ul><h1 id="内容处理命令"><a href="#内容处理命令" class="headerlink" title="内容处理命令"></a>内容处理命令</h1><ul><li><p><strong>内容查找 grep</strong></p><p>命令格式： <em>grep  [ 选项 ]  [ 待查找的字符串 ]  [ 待查找的文件 ]</em></p><p>功能描述：在文本中搜索匹配的内容，并输出，支持正则表达式</p><p>​                    •  -v XX  显示不包含字符XX的行</p><p>​                    •  -c XX  显示文件中包含XX的行数</p><p>​                    •  -r  查找当前目录与子目录中查找</p><p>示例图：</p><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%8617.png"></p></li></ul><ul><li><p><strong>内容显示 wc</strong></p><p>命令格式： wc  [ 选项 ]  文件名</p><p>功能描述：显示文件行数、单词数、字节数</p><p>​                    •  -c或– bytes或–chars  只显示Bytes数</p><p>​                    •  -l或–lines  只显示行数</p><p>​                    •  -w或– words  只显示字数</p><p>示例图：</p><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%8618.png"></p></li></ul><ul><li><p><strong>内容排序 sort</strong></p><p>命令格式： <em>sort  [ 选项 ]  文件名</em> </p><p>功能描述：  以行为单位，对文本内容进行排序</p><p>排序后去重复行命令：<em>uniq 文件名</em></p><p>示例图：</p><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%8619.png"></p></li></ul><ul><li><p><strong>内容比较 diff</strong></p><p>命令格式：<em>diff  [ 选项 ]  文件1  文件2</em> </p><p>功能描述：逐行比较两个文件的差异，文件相同则不显示结果</p><p>显示2个文件的相同部分：<em>comm  文件1  文件2</em></p><p>示例图：</p><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%8620.png"></p></li></ul><h1 id="输出输入重定向"><a href="#输出输入重定向" class="headerlink" title="输出输入重定向"></a>输出输入重定向</h1><ul><li><p><strong>输出重定向  &gt;  与 &gt;&gt;</strong></p><p>命令格式：<em>命令  &gt;/&gt;&gt;  文件名</em></p><p>功能描述：将应该通过标准输出设备显示器输出的内容输出到文件</p><p>​                    •  “&gt;”  文件不存在，则创建新文件；文件存在，则覆盖原有文件</p><p>​                    •  “&gt;&gt;”  文件不存在，则创建；文件存在，则追加到文件末尾</p><p>​      &amp;&gt;或&amp;&gt;&gt;可将标准输出和错误输出重定向到同一文件</p><p>​      如果重定向的文件为/dev/null，系统将丢弃此错误输</p><p>示例1：查看文件内容并输出到另外一个文件</p><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%8621.png"></p><p>示例2：查找文件中包含flower的行并输出到另外一个文件</p><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%8622.png"></p></li><li><p><strong>cut</strong></p><p>命令格式：<em>cut  [ 选项 ]</em>  </p><p>功能描述：文本切割显示命令</p><p>​                    •  -d  指定分隔符  </p><p>​                    •  -f  指定第几列   被切割文件</p><p>​      <em>-f  1,3</em>    第一列和第三列</p><p>​      <em>-f  1-3</em>    第一列到第三列</p><p>​    分隔符如果为空格需要用单引号或双引号引起来</p><p>示例：将/etc/passwd 中第一个字段（用户名）截取到user文件中</p><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%8623.png"></p></li></ul><ul><li><p><strong>输入重定向  &lt;  与 &lt;&lt;</strong></p><p>命令格式：<em>命令  &lt;/&lt;&lt;  文件</em></p><p>功能描述：将重定向符号后面的文件（程序）作为前一个命令 (程序)的输入</p><table><thead><tr><th>类型</th><th>符号（语法）</th><th>功能</th></tr></thead><tbody><tr><td>标识符限定输入</td><td><em>命令 &lt; 文件1</em></td><td>命令把文件1的内容作为标准输入设备。</td></tr><tr><td>标识符限定输入</td><td><em>命令 &lt;&lt; 标识符</em></td><td>命令读入标准输入中的内容，直到遇到“标识符” 为止。</td></tr><tr><td>输入输出重定向（同时使用）</td><td><em>命令 &lt; 文件1 &gt; 文件2</em></td><td>命令把文件1的内容作为标准输入，把文件2作为标准输出。</td></tr></tbody></table><p>示例图：</p><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%8624.png"></p></li></ul><h1 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h1><ul><li><p><strong>管道命令 |</strong></p><p>命令格式：<em>命令1  |  命令2</em></p><p>功能描述：将命令1的标准输出重定向为命令2的标准输入</p><p>​    管道不能处理命令1的错误输出</p><p>​    命令2必须能够接收标准输入流</p><p>示例1：统计系统中有多少个设备</p><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%8625.png"></p><p>示例2：获取当前日期的年月日显示在文件date.txt 中</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%8626.png"></p><p>​    示例3：统计系统中共有多少个用户</p><p><img src="https://cdn.jsdelivr.net/gh/JOEL-T99/Pic//img/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%8627.png"></p><h1 id="文件归档压缩"><a href="#文件归档压缩" class="headerlink" title="文件归档压缩"></a>文件归档压缩</h1><ul><li><p><strong>压缩命令 gzip</strong></p><p>命令格式：gzip  [ 选项 ]  文件名</p><p>功能描述：gzip只提供压缩功能，不提供打包功能，所以gzip只能压缩单个文件，不能压缩多个文件或者目录，压缩后的文件将自动替换原文件，并添加后缀.gz</p><p>​                    •  -c  将输出写到标准输出上，并保留原有文件</p><p>​                    <u>•  -d  将压缩文件解压</u></p><p>​                    •  -r  递归式压缩/解压缩指定目录中的所有文件</p><p>​                    •  -num  用指定的数字num调整压缩的速度和压缩比</p><p>​                    •  -v  对每一个压缩和解压的文件显示文件名和压缩比</p><p>​                    •  -t  测试，检查压缩文件是否完整</p></li></ul><ul><li><p><strong>归档命令 tar</strong></p><p>命令格式：tar  [选项]  [归档文件名]  [要归档的文件/列表]</p><p>功能描述：把多个文件前后连在一起，形成一个大文件tar并不对文件进行压缩</p><p>​                    •  -c  创建一个新的归档文件</p><p>​                    •  -f  指定一个归档文件/设备进行操作</p><p>​                    •  -v  在归档过程显示文件名</p><p>​                    •  -r  向归档文件末尾追加文件</p><p>​                    •  -u  更新归档文件</p><p>​                    •  -x  从归档文件中解出文件</p><p>​                    •  -t  列出归档文件中的文件</p><p>​                    •  -delete  从归档文件中删除一个文件</p><p>​                    •  -A  合并两个规档文件</p><p>​                    •  -C  指定一个解档目录</p><p>​      [ 归档文件 ] 必须紧跟在 -f 选项后面，且以.tar为后缀名</p><p>​      [ 要归档的文件/列表 ]  可以是一批文件名，中间用空格隔开</p></li></ul><ul><li><p><strong>打包压缩  tar + bzip2</strong></p><p>压缩：<em>tar -jcvf  归档压缩文件.tar.bz2   待压缩文件|列表</em></p><p>解压：<em>tar -jxvf  归档压缩文件.tar.bz2   [ -C  解包路径 ]</em>  </p><p>​      当解包路径省略时，表示解压缩到当前目录</p></li></ul><ul><li><p><strong>压缩命令  zip / unzip</strong></p><p>压缩：<em>zip  -r  archive _name.zip  filename</em> </p><p>​                    •  -r  递归压缩子目录下所有文件</p><p>解压缩：<em>unzip  archive _name.zip [-d new_dir]</em></p><p>​                    •  -d  将文件解压缩至指定的目录，省略时，表示解压文件至当前目录下</p></li></ul><hr><div align="center">❤️END❤️</div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Linux目录结构&quot;&gt;&lt;a href=&quot;#Linux目录结构&quot; class=&quot;headerlink&quot; title=&quot;Linux目录结构&quot;&gt;&lt;/a&gt;Linux目录结构&lt;/h1&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;/bin&lt;/strong</summary>
      
    
    
    
    
    <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Mac下烧录树莓派系统</title>
    <link href="http://yoursite.com/2020/10/20/Mac%E4%B8%8B%E7%83%A7%E5%BD%95%E6%A0%91%E8%8E%93%E6%B4%BE%E7%B3%BB%E7%BB%9F/"/>
    <id>http://yoursite.com/2020/10/20/Mac%E4%B8%8B%E7%83%A7%E5%BD%95%E6%A0%91%E8%8E%93%E6%B4%BE%E7%B3%BB%E7%BB%9F/</id>
    <published>2020-10-20T15:47:36.000Z</published>
    <updated>2020-11-16T12:00:59.931Z</updated>
    
    
    
    
    
  </entry>
  
</feed>
